// paste 'Power Query M code' in Power BI 'Blank Query' in 'Advanced Editor window'
// 'Mark as date table' in Power BI
// table name: "DateTable"
// add Single-direction relationship via date column to your tables with business data
let    
    // years back [sales, minimum 1]
    YearsHistory = 2,
    // years forward [forecast, minimum 1]
    YearsFuture = 1,
    //Language for 'Local columns', not for Date or ddd-dd column
    DateLanguage = "LocalLang",
    // Microsoft Local names - Language Tag BCP 47 like: "en-US" "nl-NL" "zh-CN"    
    Local = if (DateLanguage) = "LocalLang" then "nl-NL" else "en-US",
    // Updates on next Refresh
    Today =  DateTime.Date( DateTime.LocalNow() ),
    Today_Year = Date.Year( Today ),
    StartDate = #date(Today_Year - YearsHistory ,01,01), 
    EndDate = #date(Today_Year + YearsFuture ,12,31), 
    ListDates = List.Dates( StartDate, Duration.Days( EndDate - StartDate ) +1, #duration( 1, 0, 0, 0 ) ),
    ConvertedToTable = Table.FromList(ListDates, Splitter.SplitByNothing(), {"Date"}, null, ExtraValues.Ignore),
    DateType = Table.TransformColumnTypes(ConvertedToTable,{{"Date", type date}}),
    // Format datecolumn as 'ddd-dd' in table-view, useful for dateranges below 29 days
    #"ddd-dd" = Table.DuplicateColumn(DateType, "Date", "ddd-dd"),
    LocalMonth = Table.AddColumn(#"ddd-dd", "Local Month", each Date.ToText([Date], [Format="MMMM", Culture=Local]), Text.Type),
    LocalMonth_short = Table.AddColumn(LocalMonth, "Local Month-short", each Date.ToText([Date], [Format="MMM", Culture=Local]), Text.Type),
    LocalWeekDay = Table.AddColumn(LocalMonth_short, "Local WeekDay", each Date.ToText([Date], [Format="dddd", Culture=Local]), Text.Type),
    LocalWeekDay_short = Table.AddColumn(LocalWeekDay, "Local WeekDay-short", each Date.ToText([Date], [Format="ddd", Culture=Local]), Text.Type),
    // range 1 . . 7 = mon . . sun
    ISOWeekday = Table.AddColumn(LocalWeekDay_short, "ISOWeekDay", each Date.DayOfWeek([Date], Day.Monday) + 1, Int64.Type),
    ISOYear = Table.AddColumn(ISOWeekday, "ISOYear", each let
        ClosestThursday =  Date.AddDays( [Date], 4 - [ISOWeekDay] ),
        ISOYear = Date.Year( ClosestThursday )
    in
        ISOYear, Int64.Type ),
    // range 1 . . 52/53
    ISOWeek = Table.AddColumn(ISOYear, "ISOWeek", each let
        JanFour =  #date([ISOYear],01,04),
        // range 1 . . 364/371
        ISODay = Duration.Days([Date] - JanFour) + Date.DayOfWeek(JanFour, Day.Monday) + 1,    
        ISOWeek = Number.IntegerDivide((ISODay - 1), 7) + 1
    in
        ISOWeek, Int64.Type),
    ISOYear_Week = Table.AddColumn(ISOWeek, "ISOYear-Week", each Number.ToText([ISOYear])&"W"&Number.ToText([ISOWeek],"00"), Text.Type),
    Workday = Table.AddColumn(ISOYear_Week, "Workday", each if ([ISOWeekDay] >= 1 and ([ISOWeekDay] <= 5)) then "Workday" else if ([ISOWeekDay] = 6 or ([ISOWeekDay] = 7)) then "Weekend" else "-error-", Text.Type),
    DateAsInteger = Table.AddColumn(Workday, "DateAsInteger", each Date.ToText([Date], [Format="yyyyMMdd", Culture=Local]), Text.Type),
    Year = Table.AddColumn(DateAsInteger, "Year", each Date.Year( [Date] ), Int64.Type), 
    // range 1 . . 365/366   
    YearDayNumber = Table.AddColumn(Year, "YearDayNumber", each Date.DayOfYear([Date]), Int64.Type),
    // range 1 . . 4
    Quarter = Table.AddColumn(YearDayNumber, "Quarter", each Date.QuarterOfYear( [Date] ), Int64.Type),
    // range 1 . . 12
    Month = Table.AddColumn(Quarter, "Month", each Date.Month( [Date] ), Int64.Type),
    // range 1 . . 28/29/30/31
    Day = Table.AddColumn(Month, "Day", each Date.Day( [Date] ), Int64.Type),
    Year_Quarter = Table.AddColumn(Day, "Year-Quarter", each Number.ToText([Year])&"/Q"&Number.ToText([Quarter]), Text.Type),
    Year_Month = Table.AddColumn(Year_Quarter, "Year-Month", each Number.ToText([Year])&"M"&Number.ToText([Month]), Text.Type),
    Sort = Table.Sort(Year_Month,{"Date", Order.Ascending})
in
    Sort
// end
